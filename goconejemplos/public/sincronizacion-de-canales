<!DOCTYPE html>
<html>
  <head>
    <meta http-eqiv="content-type" content="text/html;charset=utf-8">
    <title>Go con Ejemplos: Sincronizacion de Canales</title>
    <link rel=stylesheet href="site.css">
  </head>
  <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-51269806-1', 'goconejemplos.com');
    ga('send', 'pageview');

  </script>
  <body>
    <div class="example" id="sincronizacion-de-canales">
      <h2><a href="./">Go con Ejemplos</a>: Sincronizacion de Canales</h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>Podemos utilizar canales para sincronizar
la ejecución a traves de diferentes goroutines.
Aquí un ejemplo donde utilizamos un bloqueo
para esperar a que termine de ejectuarse la goroutine.</p>

          </td>
          <td class="code empty leading">
          
            
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
          <a href="http://play.golang.org/p/bpWQKdfgeZ"><img title="Run code" src="play.png" class="run" /></a>
            <div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
          
            <div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
<span class="kn">import</span> <span class="s">&quot;time&quot;</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Esta es la función que ejecutaremos en una goroutine. Vamos a usar
el canal de <code>terminado</code> para notificar a otra goroutine que el
trabajo de la función ha terminado.</p>

          </td>
          <td class="code leading">
          
            <div class="highlight"><pre><span class="kd">func</span> <span class="nx">trabajo</span><span class="p">(</span><span class="nx">terminado</span> <span class="kd">chan</span> <span class="kt">bool</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Print</span><span class="p">(</span><span class="s">&quot;trabajando...&quot;</span><span class="p">)</span>
    <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;terminado&quot;</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Enviamos un valor para notificar que terminamos.</p>

          </td>
          <td class="code leading">
          
            <div class="highlight"><pre>    <span class="nx">terminado</span> <span class="o">&lt;-</span> <span class="kc">true</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
          
            <div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Comenzamos una goroutine con <code>trabajo</code>, y le pasamos el canal al
que tiene que notificar</p>

          </td>
          <td class="code leading">
          
            <div class="highlight"><pre>    <span class="nx">terminado</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">bool</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="k">go</span> <span class="nx">trabajo</span><span class="p">(</span><span class="nx">terminado</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Hay un bloqueo hasta que recibimos la notificacion
de trabajo en el canal.</p>

          </td>
          <td class="code">
          
            <div class="highlight"><pre>    <span class="o">&lt;-</span><span class="nx">terminado</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      <table>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
          
            <div class="highlight"><pre><span class="gp">$</span> go run sincronizacion-de-canales.go
<span class="go">trabajando...terminado</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Si quitaras la línea <code>&lt;- terminado</code> de este
código, el programa terminaría antes de
que <code>trabajo</code> comienze.</p>

          </td>
          <td class="code empty">
          
            
          </td>
        </tr>
        
      </table>
      
      
      <p class="next">
        Siguiente ejemplo: <a href="direccion-de-canales">Direccion de Canales</a>.
      </p>
      
      <p class="footer">
        by <a href="https://twitter.com/mmcgrana">@mmcgrana</a> | <a href="mailto:mmcgrana@gmail.com">feedback</a> | <a href="https://github.com/mmcgrana/gobyexample/blob/master/examples/sincronizacion-de-canales">source</a> | <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
      </p>
    </div>
  </body>
</html>
