<!DOCTYPE html>
<html>
  <head>
    <meta http-eqiv="content-type" content="text/html;charset=utf-8">
    <title>Go con Ejemplos: Pool de trabajadores</title>
    <link rel=stylesheet href="site.css">
  </head>
  <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-51269806-1', 'goconejemplos.com');
    ga('send', 'pageview');

  </script>
  <body>
    <div class="example" id="pool-de-trabajadores">
      <h2><a href="./">Go con Ejemplos</a>: Pool de trabajadores</h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>En este ejemplo veremos como implementar un
<em>pool de trabajadores</em>  usando goroutines y canales.</p>

          </td>
          <td class="code empty leading">
          
            
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
          <a href="http://play.golang.org/p/894hbf6_cC"><img title="Run code" src="play.png" class="run" /></a>
            <div class="highlight"><pre><span class="kn">package</span> <span class="nx">main</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
          
            <div class="highlight"><pre><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
<span class="kn">import</span> <span class="s">&quot;time&quot;</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Este es el trabajador del cual correremos varias
instancias concurrentes. Estos trabajadores recibirán
trabajo desde el canal <code>jobs</code> y enviarán el resultado
correspondiente en el canal <code>results</code>. Vamos a hacer
una pausa de un segundo por trabajo para simular una
tarea pesada.</p>

          </td>
          <td class="code leading">
          
            <div class="highlight"><pre><span class="kd">func</span> <span class="nx">worker</span><span class="p">(</span><span class="nx">id</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">jobs</span> <span class="o">&lt;-</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">results</span> <span class="kd">chan</span><span class="o">&lt;-</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">jobs</span> <span class="p">{</span>
        <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="s">&quot;trabajador&quot;</span><span class="p">,</span> <span class="nx">id</span><span class="p">,</span>
            <span class="s">&quot;procesando trabajo&quot;</span><span class="p">,</span> <span class="nx">j</span><span class="p">)</span>
        <span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
        <span class="nx">results</span> <span class="o">&lt;-</span> <span class="nx">j</span> <span class="o">*</span> <span class="mi">2</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
          
            <div class="highlight"><pre><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Para usar nuestro pool de trabajadores necesitamos
enviarles trabajo y recolectar sus resultados.
Hacemos dos canales para esto.</p>

          </td>
          <td class="code leading">
          
            <div class="highlight"><pre>    <span class="nx">jobs</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
    <span class="nx">results</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Aquí iniciamos tres trabajadores, inicialmente
bloqueados porque no hay trabajos aún.</p>

          </td>
          <td class="code leading">
          
            <div class="highlight"><pre>    <span class="k">for</span> <span class="nx">w</span> <span class="o">:=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">w</span> <span class="o">&lt;=</span> <span class="mi">3</span><span class="p">;</span> <span class="nx">w</span><span class="o">++</span> <span class="p">{</span>
        <span class="k">go</span> <span class="nx">worker</span><span class="p">(</span><span class="nx">w</span><span class="p">,</span> <span class="nx">jobs</span><span class="p">,</span> <span class="nx">results</span><span class="p">)</span>
    <span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Aquí envíamos 9 <em>trabajos</em> por el canal <code>jobs</code> y
luego lo cerramos para indicar que ya hay más
trabajo por procesar.</p>

          </td>
          <td class="code leading">
          
            <div class="highlight"><pre>    <span class="k">for</span> <span class="nx">j</span> <span class="o">:=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">j</span> <span class="o">&lt;=</span> <span class="mi">9</span><span class="p">;</span> <span class="nx">j</span><span class="o">++</span> <span class="p">{</span>
        <span class="nx">jobs</span> <span class="o">&lt;-</span> <span class="nx">j</span>
    <span class="p">}</span>
    <span class="nb">close</span><span class="p">(</span><span class="nx">jobs</span><span class="p">)</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p>Finalmente recolectamos todos los resultados.</p>

          </td>
          <td class="code">
          
            <div class="highlight"><pre>    <span class="k">for</span> <span class="nx">a</span> <span class="o">:=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">a</span> <span class="o">&lt;=</span> <span class="mi">9</span><span class="p">;</span> <span class="nx">a</span><span class="o">++</span> <span class="p">{</span>
        <span class="o">&lt;-</span><span class="nx">results</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>La salida de nuestro programa muestra que 9 trabajos
son ejecutados por varios trabajadores. El programa
solo toma cerca de 3 segundos a pesar de que
realiza cerca de 9 segundos de trabajo total porque
hay 3 trabajadores operando de manera concurrente.</p>

          </td>
          <td class="code leading">
          
            <div class="highlight"><pre><span class="gp">$</span> <span class="nb">time </span>go run examples/worker-pools/worker-pools.go  
<span class="go">trabajador 1 procesando trabajo 1</span>
<span class="go">trabajador 3 procesando trabajo 3</span>
<span class="go">trabajador 2 procesando trabajo 2</span>
<span class="go">trabajador 1 procesando trabajo 4</span>
<span class="go">trabajador 3 procesando trabajo 5</span>
<span class="go">trabajador 2 procesando trabajo 6</span>
<span class="go">trabajador 1 procesando trabajo 7</span>
<span class="go">trabajador 3 procesando trabajo 8</span>
<span class="go">trabajador 2 procesando trabajo 9</span>
</pre></div>

          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code">
          
            <div class="highlight"><pre><span class="go">real	0m3.380s</span>
</pre></div>

          </td>
        </tr>
        
      </table>
      
      
      <p class="next">
        Siguiente ejemplo: <a href="limitacion-de-transferencia">Limitación de transferencia</a>.
      </p>
      
      <p class="footer">
        by <a href="https://twitter.com/mmcgrana">@mmcgrana</a> | <a href="mailto:mmcgrana@gmail.com">feedback</a> | <a href="https://github.com/mmcgrana/gobyexample/blob/master/examples/pool-de-trabajadores">source</a> | <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
      </p>
    </div>
  </body>
</html>
